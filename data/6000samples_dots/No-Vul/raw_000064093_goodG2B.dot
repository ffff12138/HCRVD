digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000143" [label = "(METHOD_RETURN,static void)" ]
"1000106" [label = "(<operator>.assignment,VAR1 = VAR4)" ]
"1000109" [label = "(<operator>.assignment,VAR2.VAR5 = VAR1)" ]
"1000116" [label = "(<operator>.assignment,* VAR1 = VAR2.VAR6)" ]
"1000125" [label = "(<operator>.assignment,VAR7 = 0)" ]
"1000128" [label = "(<operator>.lessThan,VAR7 < 100)" ]
"1000131" [label = "(<operator>.postIncrement,VAR7++)" ]
"1000134" [label = "(<operator>.assignment,VAR1[VAR7] = VAR8[VAR7])" ]
"1000141" [label = "(FUN2,FUN2(VAR1))" ]
"1000135" [label = "(<operator>.indirectIndexAccess,VAR1[VAR7])" ]
"1000138" [label = "(<operator>.indirectIndexAccess,VAR8[VAR7])" ]
  "1000141" -> "1000143"  [ label = "DDG: VAR1"] 
  "1000106" -> "1000143"  [ label = "DDG: VAR4"] 
  "1000141" -> "1000143"  [ label = "DDG: FUN2(VAR1)"] 
  "1000116" -> "1000143"  [ label = "DDG: VAR2.VAR6"] 
  "1000128" -> "1000143"  [ label = "DDG: VAR7"] 
  "1000134" -> "1000143"  [ label = "DDG: VAR1[VAR7]"] 
  "1000109" -> "1000143"  [ label = "DDG: VAR2.VAR5"] 
  "1000128" -> "1000143"  [ label = "DDG: VAR7 < 100"] 
  "1000134" -> "1000143"  [ label = "DDG: VAR8[VAR7]"] 
  "1000100" -> "1000106"  [ label = "DDG: "] 
  "1000106" -> "1000109"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000109"  [ label = "DDG: "] 
  "1000100" -> "1000116"  [ label = "DDG: "] 
  "1000100" -> "1000125"  [ label = "DDG: "] 
  "1000125" -> "1000128"  [ label = "DDG: VAR7"] 
  "1000131" -> "1000128"  [ label = "DDG: VAR7"] 
  "1000100" -> "1000128"  [ label = "DDG: "] 
  "1000128" -> "1000131"  [ label = "DDG: VAR7"] 
  "1000100" -> "1000131"  [ label = "DDG: "] 
  "1000116" -> "1000141"  [ label = "DDG: VAR1"] 
  "1000134" -> "1000141"  [ label = "DDG: VAR1[VAR7]"] 
  "1000100" -> "1000141"  [ label = "DDG: "] 
  "1000128" -> "1000128"  [ label = "CDG: "] 
  "1000128" -> "1000131"  [ label = "CDG: "] 
  "1000128" -> "1000135"  [ label = "CDG: "] 
  "1000128" -> "1000138"  [ label = "CDG: "] 
  "1000128" -> "1000134"  [ label = "CDG: "] 
}
