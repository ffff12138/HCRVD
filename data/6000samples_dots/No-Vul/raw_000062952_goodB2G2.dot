digraph FUN1 {  
"1000100" [label = "(METHOD,FUN1)" ]
"1000151" [label = "(METHOD_RETURN,static void)" ]
"1000103" [label = "(<operator>.assignment,VAR1 = NULL)" ]
"1000107" [label = "(IDENTIFIER,VAR2,if(VAR2))" ]
"1000109" [label = "(<operator>.assignment,VAR1 = (void *)VAR3)" ]
"1000111" [label = "(<operator>.cast,(void *)VAR3)" ]
"1000115" [label = "(IDENTIFIER,VAR2,if(VAR2))" ]
"1000119" [label = "(<operator>.assignment,VAR4 = wcslen((wchar_t *)VAR1))" ]
"1000121" [label = "(wcslen,wcslen((wchar_t *)VAR1))" ]
"1000122" [label = "(<operator>.cast,(wchar_t *)VAR1)" ]
"1000126" [label = "(<operator>.assignment,* VAR5 = (void *)calloc(VAR4+1, sizeof(wchar_t)))" ]
"1000128" [label = "(<operator>.cast,(void *)calloc(VAR4+1, sizeof(wchar_t)))" ]
"1000130" [label = "(calloc,calloc(VAR4+1, sizeof(wchar_t)))" ]
"1000131" [label = "(<operator>.addition,VAR4+1)" ]
"1000134" [label = "(<operator>.sizeOf,sizeof(wchar_t))" ]
"1000136" [label = "(memcpy,memcpy(VAR5, VAR1, (VAR4+1)*sizeof(wchar_t)))" ]
"1000139" [label = "(<operator>.multiplication,(VAR4+1)*sizeof(wchar_t))" ]
"1000140" [label = "(<operator>.addition,VAR4+1)" ]
"1000143" [label = "(<operator>.sizeOf,sizeof(wchar_t))" ]
"1000145" [label = "(FUN2,FUN2((wchar_t *)VAR5))" ]
"1000146" [label = "(<operator>.cast,(wchar_t *)VAR5)" ]
"1000149" [label = "(free,free(VAR5))" ]
  "1000103" -> "1000151"  [ label = "DDG: VAR1"] 
  "1000103" -> "1000151"  [ label = "DDG: NULL"] 
  "1000139" -> "1000151"  [ label = "DDG: VAR4+1"] 
  "1000119" -> "1000151"  [ label = "DDG: wcslen((wchar_t *)VAR1)"] 
  "1000149" -> "1000151"  [ label = "DDG: VAR5"] 
  "1000145" -> "1000151"  [ label = "DDG: (wchar_t *)VAR5"] 
  "1000109" -> "1000151"  [ label = "DDG: (void *)VAR3"] 
  "1000128" -> "1000151"  [ label = "DDG: calloc(VAR4+1, sizeof(wchar_t))"] 
  "1000140" -> "1000151"  [ label = "DDG: VAR4"] 
  "1000136" -> "1000151"  [ label = "DDG: (VAR4+1)*sizeof(wchar_t)"] 
  "1000143" -> "1000151"  [ label = "DDG: wchar_t"] 
  "1000111" -> "1000151"  [ label = "DDG: VAR3"] 
  "1000109" -> "1000151"  [ label = "DDG: VAR1"] 
  "1000136" -> "1000151"  [ label = "DDG: memcpy(VAR5, VAR1, (VAR4+1)*sizeof(wchar_t))"] 
  "1000121" -> "1000151"  [ label = "DDG: (wchar_t *)VAR1"] 
  "1000145" -> "1000151"  [ label = "DDG: FUN2((wchar_t *)VAR5)"] 
  "1000126" -> "1000151"  [ label = "DDG: (void *)calloc(VAR4+1, sizeof(wchar_t))"] 
  "1000136" -> "1000151"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000103"  [ label = "DDG: "] 
  "1000100" -> "1000107"  [ label = "DDG: "] 
  "1000111" -> "1000109"  [ label = "DDG: VAR3"] 
  "1000100" -> "1000109"  [ label = "DDG: "] 
  "1000100" -> "1000111"  [ label = "DDG: "] 
  "1000100" -> "1000115"  [ label = "DDG: "] 
  "1000121" -> "1000119"  [ label = "DDG: (wchar_t *)VAR1"] 
  "1000100" -> "1000119"  [ label = "DDG: "] 
  "1000122" -> "1000121"  [ label = "DDG: VAR1"] 
  "1000103" -> "1000122"  [ label = "DDG: VAR1"] 
  "1000109" -> "1000122"  [ label = "DDG: VAR1"] 
  "1000100" -> "1000122"  [ label = "DDG: "] 
  "1000128" -> "1000126"  [ label = "DDG: calloc(VAR4+1, sizeof(wchar_t))"] 
  "1000100" -> "1000126"  [ label = "DDG: "] 
  "1000130" -> "1000128"  [ label = "DDG: VAR4+1"] 
  "1000119" -> "1000130"  [ label = "DDG: VAR4"] 
  "1000100" -> "1000130"  [ label = "DDG: "] 
  "1000119" -> "1000131"  [ label = "DDG: VAR4"] 
  "1000100" -> "1000131"  [ label = "DDG: "] 
  "1000100" -> "1000134"  [ label = "DDG: "] 
  "1000126" -> "1000136"  [ label = "DDG: VAR5"] 
  "1000100" -> "1000136"  [ label = "DDG: "] 
  "1000122" -> "1000136"  [ label = "DDG: VAR1"] 
  "1000139" -> "1000136"  [ label = "DDG: VAR4+1"] 
  "1000100" -> "1000139"  [ label = "DDG: "] 
  "1000119" -> "1000139"  [ label = "DDG: VAR4"] 
  "1000100" -> "1000140"  [ label = "DDG: "] 
  "1000119" -> "1000140"  [ label = "DDG: VAR4"] 
  "1000100" -> "1000143"  [ label = "DDG: "] 
  "1000146" -> "1000145"  [ label = "DDG: VAR5"] 
  "1000136" -> "1000146"  [ label = "DDG: VAR5"] 
  "1000100" -> "1000146"  [ label = "DDG: "] 
  "1000146" -> "1000149"  [ label = "DDG: VAR5"] 
  "1000100" -> "1000149"  [ label = "DDG: "] 
}
